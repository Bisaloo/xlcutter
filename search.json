[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 xlcutter authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Gruson. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gruson H (2022). xlcutter: Parse Batches 'xlsx' Files Based Template. R package version 0.0.0.9000.","code":"@Manual{,   title = {xlcutter: Parse Batches of 'xlsx' Files Based on a Template},   author = {Hugo Gruson},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"xlcutter","dir":"","previous_headings":"","what":"Parse Batches of xlsx Files Based on a Template","title":"Parse Batches of xlsx Files Based on a Template","text":"package allows parse entire folders non-rectangular ‘xlsx’ files single rectangular tidy ‘data.frame’ based custom template file defining column names output.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Parse Batches of xlsx Files Based on a Template","text":"can install development version package GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"Bisaloo/xlcutter\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Parse Batches of xlsx Files Based on a Template","text":"Non-rectangular excel files common many domains. simple demonstration , use example “Blue timesheet” https://templates.office.com/, employees can log working hours. typical use case xlcutter example manager want get single rectangular dataset timesheets different employees. Screenshot timesheets two fictitious employees first step extract data define various columns want output template file. can mark data cells extract custom marker, default {{ column_name }}. Screenshot template timesheet example","code":"library(xlcutter)  data_folder <- system.file(\"example\", \"timesheet\", package = \"xlcutter\") template_file <- system.file(   \"example\", \"timesheet_template.xlsx\",   package = \"xlcutter\" )  xlsx_cutter(   data_folder,   template_file ) #>   employee_firstname contract_hours employee_lastname realised_hours #> 1               Paul             35            Dupont          35.00 #> 2           Marianne             35            Lebrun          36.25 #>   manager_firstname manager_lastname period_start period_end #> 1             Lydia           Dubois   2022-01-03 2022-01-07 #> 2             Lydia           Dubois   2022-01-03 2022-01-07"},{"path":"/index.html","id":"other-example-of-use-cases","dir":"","previous_headings":"","what":"Other example of use cases","title":"Parse Batches of xlsx Files Based on a Template","text":"typical use cases package : hospital wants collate non-rectangular information sheets different patients single rectangular dataset","code":""},{"path":"/reference/xlsx_cutter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data.frame from a folder of non-rectangular excel files — xlsx_cutter","title":"Create a data.frame from a folder of non-rectangular excel files — xlsx_cutter","text":"Create data.frame folder non-rectangular excel files based defined custom template","code":""},{"path":"/reference/xlsx_cutter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data.frame from a folder of non-rectangular excel files — xlsx_cutter","text":"","code":"xlsx_cutter(   data_folder,   template_file,   data_sheet = 1,   template_sheet = 1,   marker_open = \"{{\",   marker_close = \"}}\" )"},{"path":"/reference/xlsx_cutter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data.frame from a folder of non-rectangular excel files — xlsx_cutter","text":"data_folder path folder holder xlsx files parse template_file path template file use model parse xlsx files data_folder data_sheet sheet id extract xlsx files template_sheet sheet id template file use model parse xlsx files data_folder marker_open, marker_close character marker mark variables extract template_file","code":""},{"path":"/reference/xlsx_cutter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data.frame from a folder of non-rectangular excel files — xlsx_cutter","text":"","code":"data_folder <- system.file(\"example\", \"timesheet\", package = \"xlcutter\") template_file <- system.file(   \"example\", \"timesheet_template.xlsx\",   package = \"xlcutter\" )  xlsx_cutter(   data_folder,   template_file ) #>   employee_firstname contract_hours employee_lastname realised_hours #> 1               Paul             35            Dupont          35.00 #> 2           Marianne             35            Lebrun          36.25 #>   manager_firstname manager_lastname period_start period_end #> 1             Lydia           Dubois   2022-01-03 2022-01-07 #> 2             Lydia           Dubois   2022-01-03 2022-01-07"}]
